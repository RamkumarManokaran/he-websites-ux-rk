# To replicate for a new project,
# 1) Replace values for Variables - $PROJECT_NAME, $PROJECT_PATH & $CLOUDFRONT_ID
# 2) Replace "pgs" with value of "PROJECT_NAME"

.pgs/pipeline-vars:
  variables:
    PROJECT_NAME: pgs
    PROJECT_PATH: apps/pgs
    CLOUDFRONT_ID: ${PGS_CLOUDFRONT_ID}
#####################################################

include:
  # - project: idp-education/shared/artifacts/devsecops/idp-connect/pipeline-resources/gitlab-pipelines
  #   ref: main
  #   file:
  #     - /nextjs/he-websites/base-config/base.yml
  #     - /nextjs/he-websites/base-config/rules.yml
  - local: /base-config/base.yml
  - local: /base-config/rules.yml
################# Develop Pipeline  ###############

.pgs/dev-vars:
  variables:
    PROJECT_NAME: !reference [.pgs/pipeline-vars, variables, PROJECT_NAME]
    PROJECT_PATH: !reference [.pgs/pipeline-vars, variables, PROJECT_PATH]
    BRANCH: develop #Gitlab Branch
    GITLAB_ENV: develop #Gitlab Pipeline Environment 
    BUILD: build:pgs

pgs/dev/build:
  extends: 
    - .build_job
    - .pipeline_rules
  variables: !reference [.pgs/dev-vars, variables]

pgs/dev/deploy:
  extends: 
    - .deploy_job
    - .pipeline_rules
  variables: !reference [.pgs/dev-vars, variables]
  needs: 
    - job: pgs/dev/build
      artifacts: true

pgs/dev/invalidate:
  extends: 
    - .cf_invalidate_job
    - .pipeline_rules
  variables: !reference [.pgs/dev-vars, variables]
  needs: 
    - job: pgs/dev/build
    - job: pgs/dev/deploy
      artifacts: false

# ################# Staging Pipeline  ###############

.pgs/stage-vars:
  variables:
    PROJECT_NAME: !reference [.pgs/pipeline-vars, variables, PROJECT_NAME]
    PROJECT_PATH: !reference [.pgs/pipeline-vars, variables, PROJECT_PATH]
    BRANCH: stage #Gitlab Branch
    GITLAB_ENV: staging #Gitlab Pipeline Environment 

pgs/stage/build:
  extends: 
    - .build_job
    - .pipeline_rules
  variables: !reference [.pgs/stage-vars, variables]

pgs/stage/deploy:
  extends: 
    - .deploy_job
    - .pipeline_rules
  variables: !reference [.pgs/stage-vars, variables]
  needs: 
    - job: pgs/stage/build
      artifacts: true
  
pgs/stage/invalidate:
  extends: 
    - .cf_invalidate_job
    - .pipeline_rules
  variables: !reference [.pgs/stage-vars, variables]
  needs: 
    - job: pgs/stage/build
    - job: pgs/stage/deploy
      artifacts: false

# ################# Prod Pipeline  ###############

.pgs/prod-vars:
  variables:
    PROJECT_NAME: !reference [.pgs/pipeline-vars, variables, PROJECT_NAME]
    PROJECT_PATH: !reference [.pgs/pipeline-vars, variables, PROJECT_PATH]
    BRANCH: prod #Gitlab Branch
    GITLAB_ENV: production #Gitlab Pipeline Environment 

pgs/prod/build:
  extends: 
    - .build_job
    - .pipeline_rules
  variables: !reference [.pgs/prod-vars, variables]

pgs/prod/deploy:
  extends: 
    - .deploy_job
    - .pipeline_rules
  variables: !reference [.pgs/prod-vars, variables]
  needs: 
    - job: pgs/prod/build
      artifacts: true

pgs/prod/invalidate:
  extends: 
    - .cf_invalidate_job
    - .pipeline_rules
  variables: !reference [.pgs/prod-vars, variables]
  needs: 
    - job: pgs/prod/build
    - job: pgs/prod/deploy
      artifacts: false

# #####################################################